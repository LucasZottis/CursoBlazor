@inject IJSRuntime js

<h1>@Titulo</h1>

@if ( ListaTarefas != null )
{
    <NovaTarefa AdicionarTarefa="AdicionarNovaTarefa" DescricaoNovaTarefa="_novaTarefa"></NovaTarefa>
}

@if ( ListaTarefas == null )
{
    <Alerta Mensagem=" Carregando..." TipoMensagem="TipoMensagem.Aviso"></Alerta>
}
else if ( !ListaTarefas.Any() )
{
    <Alerta Mensagem=" Ainda não existem tarefas cadastradas." TipoMensagem="TipoMensagem.Aviso"></Alerta>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Ação</th>
                <th>Data</th>
                <th>Descrição</th>
                <th>Concluída</th>
            </tr>
        </thead>
        <tbody>
            @foreach ( Tarefa item in ListaTarefas )
            {
                <tr>
                    <TarefaIndividual Item="@item" RemoverTarefaIndividual="ConfirmarRemocaoTarefa" AlterarEstadoTarefaIndividual="AlterarEstadoTarefa"></TarefaIndividual>
                </tr>
            }
        </tbody>
    </table>
}

<Confirmar @ref="confirmacao" Titulo="Excluir tarefa?" AoCancelar="CancelarRemocaoTarefa" AoConfirmar="RemoverTarefa" >
    <div>Deseja excluir esta tarefa?</div>
</Confirmar>

@code {
    private string _novaTarefa = "";
    Confirmar confirmacao;

    [Parameter]
    public List<Tarefa> ListaTarefas { get; set; }

    [Parameter]
    public string Titulo { get; set; }

    Tarefa _tarefaRemovida;

    private static int totalTarefas = 0;

    private async void AdicionarNovaTarefa( string descricaoTarefa )
    {
        if ( !string.IsNullOrEmpty( descricaoTarefa ) )
        {
            ListaTarefas.Add( new Tarefa()
                {
                    DataCriacao = DateTime.Now,
                    Descricao = descricaoTarefa,
                    ID = Guid.NewGuid()
                } );

            _novaTarefa = "";
        }

        descricaoTarefa = string.Empty;
    }

    private void ConfirmarRemocaoTarefa( Tarefa tarefa )
    {
        confirmacao.Exibir();
        _tarefaRemovida = tarefa;
    }

    private void RemoverTarefa()
    {
        if ( _tarefaRemovida == null )
        {
            return;
        }

        if ( _tarefaRemovida.Concluida )
        {
            return;
        }

        ListaTarefas.Remove( _tarefaRemovida );
        confirmacao.Fechar();
        _tarefaRemovida = null;
    }

    private void CancelarRemocaoTarefa()
    {
        confirmacao.Fechar();
        _tarefaRemovida = null;
    }

    private void AlterarEstadoTarefa( Tarefa tarefa )
    {
        if ( tarefa == null )
        {
            return;
        }

        tarefa.Concluida = !tarefa.Concluida;
    }

    private void AoCancelar()
    {

    }

    private void AoConfirmar()
    {

    }
}
